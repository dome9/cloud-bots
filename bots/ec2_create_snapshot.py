'''
## ec2_create_snapshot  
What it does: Snapshots the EBS volumes on an instance  
Usage: AUTO: ec2_create_snapshot  
Notes: The snapshot description will show that it was created by CloudBots and the rule that failed that triggered the bot. Also, the snapshot will be tagged with a key of "source_instance_id" and a value with the instance id from the source instance.   
Limitations: This will not work on Instance Store volumes. Only EBS  
'''

import boto3

def run_action(boto_session,rule,entity,params):
    text_output = ""
    instance = entity['id']
    ec2_client = boto_session.client('ec2')
    
    if len(entity['volumes']) == 0:
        text_output = "Instance only has Instance Store volumes and this bot only supports snapshotting EBS volumes. Skipping\n"
        return text_output

    # if volumes (length) == 0 - just instance store. skipping
    for volume in entity['volumes']:
        volume_id = volume['volumeId']
        description = "Snapshot generated by CloudBots. Rule that triggered the snapshot: \"%s\"" % rule['name']

        result = ec2_client.create_snapshot(
            Description=description,
            VolumeId=volume_id,
            TagSpecifications=[
                {
                    'ResourceType': 'snapshot',
                    'Tags': [
                        {
                            'Key': 'source_instance_id',
                            'Value': instance
                        },
                    ]
                },
            ]
        )

        responseCode = result['ResponseMetadata']['HTTPStatusCode']
        if responseCode >= 400:
            text_output = text_output + "Unexpected error: %s \n" % str(result)
        else:
            text_output = text_output + "Volume snapshot creation started: %s \n" % volume_id

    return text_output 


